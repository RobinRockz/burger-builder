{"version":3,"sources":["components/Order/Order.js","containers/Orders/Orders.js"],"names":["order","props","ingredients","key","push","react_default","a","createElement","style","textTransform","display","margin","border","padding","className","price","toFixed","Orders","this","onFetchOrder","token","userId","orders","map","Order_Order","id","loading","Spinner","Component","connect","state","auth","dispatch","actions","withErrorHandler","axios"],"mappings":"+KA+BeA,UA5BD,SAACC,GAEZ,IAAMC,EAAc,GAEpB,IAAI,IAAIC,KAAOF,EAAMC,YAChBA,EAAYE,KACRC,EAAAC,EAAAC,cAAA,QACIC,MAAO,CACHC,cAAe,aACfC,QAAS,eACTC,OAAQ,QACRC,OAAQ,iBACRC,QAAS,OAGbV,IAAKA,GAAMA,EATf,MASuBF,EAAMC,YAAYC,KAKjD,OACIE,EAAAC,EAAAC,cAAA,OAAKO,UAAU,SACXT,EAAAC,EAAAC,cAAA,yBAAiBL,GACjBG,EAAAC,EAAAC,cAAA,uBAAeN,EAAMc,MAAMC,QAAQ,+CCjBzCC,8LAGEC,KAAKjB,MAAMkB,aAAaD,KAAKjB,MAAMmB,MAAOF,KAAKjB,MAAMoB,yCAKrD,IAAIC,EAASJ,KAAKjB,MAAMqB,OAAOC,IAAI,SAACvB,GAAD,OAC/BK,EAAAC,EAAAC,cAACiB,EAAD,CAAOrB,IAAKH,EAAMyB,GAAIvB,YAAaF,EAAME,YAAaa,MAAOf,EAAMe,UAOvE,OAJGG,KAAKjB,MAAMyB,UACVJ,EAASjB,EAAAC,EAAAC,cAACoB,EAAA,EAAD,OAITtB,EAAAC,EAAAC,cAAA,WACKe,UAlBIM,aAwCNC,sBAhBS,SAAAC,GACpB,MAAO,CACHR,OAAQQ,EAAM9B,MAAMsB,OACpBI,QAASI,EAAM9B,MAAM0B,QACrBN,MAAOU,EAAMC,KAAKX,MAClBC,OAAQS,EAAMC,KAAKV,SAIA,SAAAW,GACvB,MAAO,CACHb,aAAc,SAACC,EAAOC,GAAR,OAAmBW,EAASC,IAAoBb,EAAOC,OAK9DQ,CAA6CK,YAAiBjB,EAAQkB","file":"static/js/5.c1eceea4.chunk.js","sourcesContent":["import React from 'react';\nimport './Order.css';\n\nconst order = (props) => {\n\n   const ingredients = [];\n\n   for(let key in props.ingredients) {\n        ingredients.push(\n            <span\n                style={{\n                    textTransform: 'capitalize',\n                    display: 'inline-block',\n                    margin: '0 8px',\n                    border: '1px solid #ccc',\n                    padding: '5px'\n\n                }} \n                key={key}>{key} : {props.ingredients[key]}</span>\n        );\n   }\n\n\n    return (\n        <div className='Order'>\n            <p>Ingredients: {ingredients}</p>\n            <p>Price: INR {props.price.toFixed(2)}</p>\n        </div>\n    );\n}\n\nexport default order;","import React, { Component } from 'react';\nimport Order from '../../components/Order/Order';\nimport axios from '../../axios-orders';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\n\nimport * as actions from '../../store/actions/index';\nimport { connect } from 'react-redux'\n\nclass Orders extends Component {\n\n    componentDidMount() {\n        this.props.onFetchOrder(this.props.token, this.props.userId);       \n    }\n    \n    render() {\n\n        let orders = this.props.orders.map((order) => (\n            <Order key={order.id} ingredients={order.ingredients} price={order.price}/>\n        ))\n\n        if(this.props.loading) {\n            orders = <Spinner />;\n        }\n\n        return (\n            <div>\n                {orders}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        orders: state.order.orders,\n        loading: state.order.loading,\n        token: state.auth.token,\n        userId: state.auth.userId\n    }\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onFetchOrder: (token, userId) => dispatch(actions.fetchOrders(token, userId))\n    }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(Orders, axios));"],"sourceRoot":""}